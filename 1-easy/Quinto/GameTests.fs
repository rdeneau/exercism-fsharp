module Quinto.GameTests

open Swensen.Unquote
open Xunit

[<Fact>]
let ``Resolve 1, 2, 3, 4, 5 => 37`` () =
    let expected =
        [ "1 * 2 = 2 * 4 = 8 * 5 = 40 - 3 = 37"
          "1 * 2 = 2 * 5 = 10 * 4 = 40 - 3 = 37"
          "1 * 3 = 3 + 4 = 7 * 5 = 35 + 2 = 37"
          "1 * 4 = 4 * 2 = 8 * 5 = 40 - 3 = 37"
          "1 * 4 = 4 * 5 = 20 * 2 = 40 - 3 = 37"
          "1 * 4 = 4 + 3 = 7 * 5 = 35 + 2 = 37"
          "1 * 5 = 5 * 2 = 10 * 4 = 40 - 3 = 37"
          "1 * 5 = 5 * 4 = 20 * 2 = 40 - 3 = 37"
          "1 + 3 = 4 * 2 = 8 * 4 = 32 + 5 = 37"
          "1 + 3 = 4 * 4 = 16 * 2 = 32 + 5 = 37"
          "2 * 4 = 8 * 1 = 8 * 5 = 40 - 3 = 37"
          "2 * 4 = 8 * 5 = 40 * 1 = 40 - 3 = 37"
          "2 * 4 = 8 * 5 = 40 - 3 = 37 * 1 = 37"
          "2 * 4 = 8 * 5 = 40 - 3 = 37 / 1 = 37"
          "2 * 4 = 8 * 5 = 40 / 1 = 40 - 3 = 37"
          "2 * 4 = 8 / 1 = 8 * 5 = 40 - 3 = 37"
          "2 * 5 = 10 * 1 = 10 * 4 = 40 - 3 = 37"
          "2 * 5 = 10 * 4 = 40 * 1 = 40 - 3 = 37"
          "2 * 5 = 10 * 4 = 40 - 3 = 37 * 1 = 37"
          "2 * 5 = 10 * 4 = 40 - 3 = 37 / 1 = 37"
          "2 * 5 = 10 * 4 = 40 / 1 = 40 - 3 = 37"
          "2 * 5 = 10 + 1 = 11 * 3 = 33 + 4 = 37"
          "2 * 5 = 10 / 1 = 10 * 4 = 40 - 3 = 37"
          "2 / 1 = 2 * 4 = 8 * 5 = 40 - 3 = 37"
          "2 / 1 = 2 * 5 = 10 * 4 = 40 - 3 = 37"
          "3 * 5 = 15 + 4 = 19 * 2 = 38 - 1 = 37"
          "3 + 4 = 7 * 1 = 7 * 5 = 35 + 2 = 37"
          "3 + 4 = 7 * 5 = 35 * 1 = 35 + 2 = 37"
          "3 + 4 = 7 * 5 = 35 + 2 = 37 * 1 = 37"
          "3 + 4 = 7 * 5 = 35 + 2 = 37 / 1 = 37"
          "3 + 4 = 7 * 5 = 35 / 1 = 35 + 2 = 37"
          "3 + 4 = 7 / 1 = 7 * 5 = 35 + 2 = 37"
          "3 / 1 = 3 + 4 = 7 * 5 = 35 + 2 = 37"
          "4 * 5 = 20 * 1 = 20 * 2 = 40 - 3 = 37"
          "4 * 5 = 20 * 2 = 40 * 1 = 40 - 3 = 37"
          "4 * 5 = 20 * 2 = 40 - 3 = 37 * 1 = 37"
          "4 * 5 = 20 * 2 = 40 - 3 = 37 / 1 = 37"
          "4 * 5 = 20 * 2 = 40 / 1 = 40 - 3 = 37"
          "4 * 5 = 20 / 1 = 20 * 2 = 40 - 3 = 37"
          "4 / 1 = 4 * 2 = 8 * 5 = 40 - 3 = 37"
          "4 / 1 = 4 * 5 = 20 * 2 = 40 - 3 = 37"
          "4 / 1 = 4 + 3 = 7 * 5 = 35 + 2 = 37"
          "5 - 2 = 3 * 3 = 9 * 4 = 36 + 1 = 37"
          "5 - 2 = 3 * 4 = 12 * 3 = 36 + 1 = 37"
          "5 / 1 = 5 * 2 = 10 * 4 = 40 - 3 = 37"
          "5 / 1 = 5 * 4 = 20 * 2 = 40 - 3 = 37" ]
    (Game.resolve [1;2;3;4;5] 37) =! expected

[<Fact>]
let ``Resolve strictly (skip identity) 1, 2, 3, 4, 5 => 37`` () =
    let expected =
        [ "1 * 2 = 2 * 4 = 8 * 5 = 40 - 3 = 37"
          "1 * 2 = 2 * 5 = 10 * 4 = 40 - 3 = 37"
          "1 * 3 = 3 + 4 = 7 * 5 = 35 + 2 = 37"
          "1 * 4 = 4 * 2 = 8 * 5 = 40 - 3 = 37"
          "1 * 4 = 4 * 5 = 20 * 2 = 40 - 3 = 37"
          "1 * 4 = 4 + 3 = 7 * 5 = 35 + 2 = 37"
          "1 * 5 = 5 * 2 = 10 * 4 = 40 - 3 = 37"
          "1 * 5 = 5 * 4 = 20 * 2 = 40 - 3 = 37"
          "1 + 3 = 4 * 2 = 8 * 4 = 32 + 5 = 37"
          "1 + 3 = 4 * 4 = 16 * 2 = 32 + 5 = 37"
          "2 * 5 = 10 + 1 = 11 * 3 = 33 + 4 = 37"
          "3 * 5 = 15 + 4 = 19 * 2 = 38 - 1 = 37"
          "5 - 2 = 3 * 3 = 9 * 4 = 36 + 1 = 37"
          "5 - 2 = 3 * 4 = 12 * 3 = 36 + 1 = 37" ]
    (Game.resolveStrictly [1;2;3;4;5] 37) =! expected

[<Fact>]
let ``Resolve 5, 6, 7, 8, 9 => 42`` () =
    let expected =
        [   "5 * 7 = 35 + 6 = 41 + 9 = 50 - 8 = 42"
            "5 * 7 = 35 + 6 = 41 - 8 = 33 + 9 = 42"
            "5 * 7 = 35 + 9 = 44 + 6 = 50 - 8 = 42"
            "5 * 7 = 35 + 9 = 44 - 8 = 36 + 6 = 42"
            "5 * 7 = 35 - 8 = 27 + 6 = 33 + 9 = 42"
            "5 * 7 = 35 - 8 = 27 + 9 = 36 + 6 = 42"
            "5 * 8 = 40 + 9 = 49 * 6 = 294 / 7 = 42"
            "5 * 8 = 40 + 9 = 49 / 7 = 7 * 6 = 42"
            "5 + 7 = 12 - 8 = 4 * 9 = 36 + 6 = 42"
            "5 - 8 = -3 + 7 = 4 * 9 = 36 + 6 = 42"
            "6 + 9 = 15 - 8 = 7 * 5 = 35 + 7 = 42"
            "6 - 8 = -2 + 9 = 7 * 5 = 35 + 7 = 42"
            "7 + 9 = 16 - 6 = 10 * 5 = 50 - 8 = 42"
            "7 + 9 = 16 / 8 = 2 + 5 = 7 * 6 = 42"
            "7 - 5 = 2 * 8 = 16 - 9 = 7 * 6 = 42"
            "7 - 6 = 1 + 9 = 10 * 5 = 50 - 8 = 42"
            "7 - 8 = -1 + 5 = 4 * 9 = 36 + 6 = 42"
            "8 + 9 = 17 - 5 = 12 - 6 = 6 * 7 = 42"
            "8 + 9 = 17 - 6 = 11 - 5 = 6 * 7 = 42"
            "8 - 5 = 3 + 9 = 12 - 6 = 6 * 7 = 42"
            "8 - 5 = 3 - 6 = -3 + 9 = 6 * 7 = 42"
            "8 - 6 = 2 + 9 = 11 - 5 = 6 * 7 = 42"
            "8 - 6 = 2 - 5 = -3 + 9 = 6 * 7 = 42"
            "9 - 5 = 4 * 7 = 28 + 6 = 34 + 8 = 42"
            "9 - 5 = 4 * 7 = 28 + 8 = 36 + 6 = 42"
            "9 - 5 = 4 + 8 = 12 - 6 = 6 * 7 = 42"
            "9 - 5 = 4 - 6 = -2 + 8 = 6 * 7 = 42"
            "9 - 6 = 3 + 7 = 10 * 5 = 50 - 8 = 42"
            "9 - 6 = 3 + 8 = 11 - 5 = 6 * 7 = 42"
            "9 - 6 = 3 - 5 = -2 + 8 = 6 * 7 = 42"
            "9 - 8 = 1 + 6 = 7 * 5 = 35 + 7 = 42" ]
    (Game.resolve [5;6;7;8;9] 42) =! expected
